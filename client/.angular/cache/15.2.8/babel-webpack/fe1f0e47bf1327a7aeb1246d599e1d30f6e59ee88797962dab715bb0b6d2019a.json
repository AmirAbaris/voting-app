{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Gender } from 'src/Enums/Gender';\nimport { Party } from 'src/Enums/Party';\nimport { State } from 'src/Enums/State';\nlet CandidateComponent = class CandidateComponent {\n  constructor(candidateService) {\n    this.candidateService = candidateService;\n    this.candidates = [];\n    this.newCandidate = {\n      candidateNationalId: '',\n      firstName: '',\n      lastName: '',\n      age: 0,\n      gender: Gender.Male,\n      party: Party.Republican,\n      address: {\n        city: '',\n        state: State.Alabama,\n        street: '',\n        zipCode: ''\n      }\n    };\n  }\n  ngOnInit() {\n    this.getAllCandidates();\n  }\n  getAllCandidates() {\n    this.candidateService.getAllCandidates().subscribe(candidates => {\n      this.candidates = candidates;\n    });\n  }\n  registerCandidate() {\n    this.candidateService.registerCandidate(this.newCandidate).subscribe(candidate => {\n      console.log('Candidate registered successfully', candidate);\n      this.getAllCandidates();\n      this.newCandidate = {\n        candidateNationalId: this.newCandidate.candidateNationalId,\n        firstName: this.newCandidate.firstName,\n        lastName: this.newCandidate.lastName,\n        age: this.newCandidate.age,\n        gender: this.newCandidate.gender,\n        party: this.newCandidate.party,\n        address: {\n          city: this.newCandidate.address.city,\n          state: this.newCandidate.address.state,\n          street: this.newCandidate.address.street,\n          zipCode: this.newCandidate.address.zipCode\n        }\n      };\n    });\n  }\n  deleteCandidate(nationalId) {\n    this.candidateService.deleteCandidate(nationalId).subscribe(() => {\n      console.log('Candidate deleted successfully');\n      this.getAllCandidates();\n    });\n  }\n};\nCandidateComponent = __decorate([Component({\n  selector: 'app-candidate',\n  templateUrl: './candidate.component.html',\n  styleUrls: ['./candidate.component.scss']\n})], CandidateComponent);\nexport { CandidateComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,KAAK,QAAQ,iBAAiB;AAOhC,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAiB7BC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAhBpC,eAAU,GAAyB,EAAE;IACrC,iBAAY,GAAuB;MACjCC,mBAAmB,EAAE,EAAE;MACvBC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAE,CAAC;MACNC,MAAM,EAAEV,MAAM,CAACW,IAAI;MACnBC,KAAK,EAAEX,KAAK,CAACY,UAAU;MACvBC,OAAO,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAEd,KAAK,CAACe,OAAO;QACpBC,MAAM,EAAE,EAAE;QACVC,OAAO,EAAE;;KAEZ;EAEwD;EAEzDC,QAAQ;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgB;IACd,IAAI,CAAChB,gBAAgB,CAACgB,gBAAgB,EAAE,CAACC,SAAS,CAAEC,UAAU,IAAI;MAChE,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC9B,CAAC,CAAC;EACJ;EAEAC,iBAAiB;IACf,IAAI,CAACnB,gBAAgB,CAACmB,iBAAiB,CAAC,IAAI,CAACC,YAAY,CAAC,CAACH,SAAS,CAAEI,SAAS,IAAI;MACjFC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEF,SAAS,CAAC;MAC3D,IAAI,CAACL,gBAAgB,EAAE;MACvB,IAAI,CAACI,YAAY,GAAG;QAClBnB,mBAAmB,EAAE,IAAI,CAACmB,YAAY,CAACnB,mBAAmB;QAC1DC,SAAS,EAAE,IAAI,CAACkB,YAAY,CAAClB,SAAS;QACtCC,QAAQ,EAAE,IAAI,CAACiB,YAAY,CAACjB,QAAQ;QACpCC,GAAG,EAAE,IAAI,CAACgB,YAAY,CAAChB,GAAG;QAC1BC,MAAM,EAAE,IAAI,CAACe,YAAY,CAACf,MAAM;QAChCE,KAAK,EAAE,IAAI,CAACa,YAAY,CAACb,KAAK;QAC9BE,OAAO,EAAE;UACPC,IAAI,EAAE,IAAI,CAACU,YAAY,CAACX,OAAO,CAACC,IAAI;UACpCC,KAAK,EAAE,IAAI,CAACS,YAAY,CAACX,OAAO,CAACE,KAAK;UACtCE,MAAM,EAAE,IAAI,CAACO,YAAY,CAACX,OAAO,CAACI,MAAM;UACxCC,OAAO,EAAE,IAAI,CAACM,YAAY,CAACX,OAAO,CAACK;;OAEtC;IACH,CAAC,CAAC;EACJ;EAEAU,eAAe,CAACC,UAAkB;IAChC,IAAI,CAACzB,gBAAgB,CAACwB,eAAe,CAACC,UAAU,CAAC,CAACR,SAAS,CAAC,MAAK;MAC/DK,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7C,IAAI,CAACP,gBAAgB,EAAE;IACzB,CAAC,CAAC;EACJ;CACD;AAxDYlB,kBAAkB,eAL9BJ,SAAS,CAAC;EACTgC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GACW9B,kBAAkB,CAwD9B;SAxDYA,kBAAkB","names":["Component","Gender","Party","State","CandidateComponent","constructor","candidateService","candidateNationalId","firstName","lastName","age","gender","Male","party","Republican","address","city","state","Alabama","street","zipCode","ngOnInit","getAllCandidates","subscribe","candidates","registerCandidate","newCandidate","candidate","console","log","deleteCandidate","nationalId","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/amirabaris/Documents/Beast-v2/client/src/app/components/candidate/candidate.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from 'src/app/services/candidate.service'; \nimport { PresidentCandidate } from 'src/models/PresidentCandidate';\nimport { Gender } from 'src/Enums/Gender';\nimport { Party } from 'src/Enums/Party';\nimport { State } from 'src/Enums/State';\n\n@Component({\n  selector: 'app-candidate',\n  templateUrl: './candidate.component.html',\n  styleUrls: ['./candidate.component.scss']\n})\nexport class CandidateComponent implements OnInit {\n  candidates: PresidentCandidate[] = [];\n  newCandidate: PresidentCandidate = {\n    candidateNationalId: '',\n    firstName: '',\n    lastName: '',\n    age: 0,\n    gender: Gender.Male,\n    party: Party.Republican,\n    address: {\n      city: '',\n      state: State.Alabama,\n      street: '',\n      zipCode: ''\n    }\n  };\n\n  constructor(private candidateService: CandidateService) {}\n\n  ngOnInit(): void {\n    this.getAllCandidates();\n  }\n\n  getAllCandidates(): void {\n    this.candidateService.getAllCandidates().subscribe((candidates) => {\n      this.candidates = candidates;\n    });\n  }\n\n  registerCandidate(): void {\n    this.candidateService.registerCandidate(this.newCandidate).subscribe((candidate) => {\n      console.log('Candidate registered successfully', candidate);\n      this.getAllCandidates();\n      this.newCandidate = {\n        candidateNationalId: this.newCandidate.candidateNationalId,\n        firstName: this.newCandidate.firstName,\n        lastName: this.newCandidate.lastName,\n        age: this.newCandidate.age,\n        gender: this.newCandidate.gender,\n        party: this.newCandidate.party,\n        address: {\n          city: this.newCandidate.address.city,\n          state: this.newCandidate.address.state,\n          street: this.newCandidate.address.street,\n          zipCode: this.newCandidate.address.zipCode\n        }\n      };\n    });\n  }\n\n  deleteCandidate(nationalId: string): void {\n    this.candidateService.deleteCandidate(nationalId).subscribe(() => {\n      console.log('Candidate deleted successfully');\n      this.getAllCandidates();\n    });\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}