{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/candidate.service\";\nexport class CandidateComponent {\n  constructor(candidateService) {\n    this.candidateService = candidateService;\n    this.candidates = [];\n  }\n  ngOnInit() {\n    this.getAllCandidates();\n  }\n  getAllCandidates() {\n    this.candidateService.getAllCandidates().subscribe(candidates => {\n      this.candidates = candidates;\n    });\n  }\n  registerCandidate(candidate) {\n    this.candidateService.registerCandidate(candidate).subscribe(createdCandidate => {\n      console.log('Candidate registered successfully:', createdCandidate);\n      // refresh the list of candidates after registering a new one\n      this.getAllCandidates();\n    });\n  }\n  getCandidateByNationalId(nationalId) {\n    this.candidateService.getCandidateByNationalId(nationalId).subscribe(candidate => {\n      console.log('Candidate retrieved successfully:', candidate);\n    });\n  }\n  updateCandidate(nationalId, candidate) {\n    this.candidateService.updateCandidate(nationalId, candidate).subscribe(result => {\n      console.log('Candidate updated successfully:', result);\n      // refresh the list of candidates after updating one\n      this.getAllCandidates();\n    });\n  }\n  deleteCandidate(nationalId) {\n    this.candidateService.deleteCandidate(nationalId).subscribe(result => {\n      console.log('Candidate deleted successfully:', result);\n      // remove the deleted candidate from the list of candidates\n      this.candidates = this.candidates.filter(c => c.candidateNationalId !== nationalId);\n    });\n  }\n}\nCandidateComponent.ɵfac = function CandidateComponent_Factory(t) {\n  return new (t || CandidateComponent)(i0.ɵɵdirectiveInject(i1.CandidateService));\n};\nCandidateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CandidateComponent,\n  selectors: [[\"app-candidate\"]],\n  decls: 84,\n  vars: 0,\n  consts: [[\"charset\", \"UTF-8\"], [\"action\", \"#\", \"method\", \"post\"], [\"for\", \"national-id\"], [\"type\", \"text\", \"id\", \"national-id\", \"name\", \"candidateNationalId\", \"required\", \"\"], [\"for\", \"first-name\"], [\"type\", \"text\", \"id\", \"first-name\", \"name\", \"firstName\", \"required\", \"\"], [\"for\", \"last-name\"], [\"type\", \"text\", \"id\", \"last-name\", \"name\", \"lastName\", \"required\", \"\"], [\"for\", \"age\"], [\"type\", \"number\", \"id\", \"age\", \"name\", \"age\", \"min\", \"18\", \"max\", \"100\", \"required\", \"\"], [\"for\", \"gender\"], [\"id\", \"gender\", \"name\", \"gender\", \"required\", \"\"], [\"value\", \"\"], [\"value\", \"Male\"], [\"value\", \"Female\"], [\"value\", \"Other\"], [\"for\", \"party\"], [\"id\", \"party\", \"name\", \"party\", \"required\", \"\"], [\"value\", \"Democratic Party\"], [\"value\", \"Republican Party\"], [\"value\", \"Green Party\"], [\"value\", \"Libertarian Party\"], [\"value\", \"Independent\"], [\"for\", \"address1\"], [\"type\", \"text\", \"id\", \"address1\", \"name\", \"address.line1\", \"required\", \"\"], [\"for\", \"address2\"], [\"type\", \"text\", \"id\", \"address2\", \"name\", \"address.line2\"], [\"for\", \"city\"], [\"type\", \"text\", \"id\", \"city\", \"name\", \"address.city\", \"required\", \"\"], [\"for\", \"state\"], [\"type\", \"text\", \"id\", \"state\", \"name\", \"address.state\", \"required\", \"\"], [\"for\", \"zip\"], [\"type\", \"text\", \"id\", \"zip\", \"name\", \"address.zip\", \"required\", \"\"], [\"type\", \"submit\", \"value\", \"Submit\"]],\n  template: function CandidateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"head\");\n      i0.ɵɵelement(1, \"meta\", 0);\n      i0.ɵɵelementStart(2, \"title\");\n      i0.ɵɵtext(3, \"New Presidential Candidate Registration\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"body\")(5, \"h1\");\n      i0.ɵɵtext(6, \"New Presidential Candidate Registration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"form\", 1)(8, \"label\", 2);\n      i0.ɵɵtext(9, \"National ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 3)(11, \"br\")(12, \"br\");\n      i0.ɵɵelementStart(13, \"label\", 4);\n      i0.ɵɵtext(14, \"First Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 5)(16, \"br\")(17, \"br\");\n      i0.ɵɵelementStart(18, \"label\", 6);\n      i0.ɵɵtext(19, \"Last Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 7)(21, \"br\")(22, \"br\");\n      i0.ɵɵelementStart(23, \"label\", 8);\n      i0.ɵɵtext(24, \"Age:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 9)(26, \"br\")(27, \"br\");\n      i0.ɵɵelementStart(28, \"label\", 10);\n      i0.ɵɵtext(29, \"Gender:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"select\", 11)(31, \"option\", 12);\n      i0.ɵɵtext(32, \"--Please select a gender--\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"option\", 13);\n      i0.ɵɵtext(34, \"Male\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"option\", 14);\n      i0.ɵɵtext(36, \"Female\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"option\", 15);\n      i0.ɵɵtext(38, \"Other\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(39, \"br\")(40, \"br\");\n      i0.ɵɵelementStart(41, \"label\", 16);\n      i0.ɵɵtext(42, \"Party:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"select\", 17)(44, \"option\", 12);\n      i0.ɵɵtext(45, \"--Please select a party--\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"option\", 18);\n      i0.ɵɵtext(47, \"Democratic Party\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"option\", 19);\n      i0.ɵɵtext(49, \"Republican Party\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"option\", 20);\n      i0.ɵɵtext(51, \"Green Party\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"option\", 21);\n      i0.ɵɵtext(53, \"Libertarian Party\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"option\", 22);\n      i0.ɵɵtext(55, \"Independent\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(56, \"br\")(57, \"br\");\n      i0.ɵɵelementStart(58, \"label\", 23);\n      i0.ɵɵtext(59, \"Address Line 1:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(60, \"input\", 24)(61, \"br\")(62, \"br\");\n      i0.ɵɵelementStart(63, \"label\", 25);\n      i0.ɵɵtext(64, \"Address Line 2:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(65, \"input\", 26)(66, \"br\")(67, \"br\");\n      i0.ɵɵelementStart(68, \"label\", 27);\n      i0.ɵɵtext(69, \"City:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(70, \"input\", 28)(71, \"br\")(72, \"br\");\n      i0.ɵɵelementStart(73, \"label\", 29);\n      i0.ɵɵtext(74, \"State/Province:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(75, \"input\", 30)(76, \"br\")(77, \"br\");\n      i0.ɵɵelementStart(78, \"label\", 31);\n      i0.ɵɵtext(79, \"Zip/Postal Code:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(80, \"input\", 32)(81, \"br\")(82, \"br\")(83, \"input\", 33);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["CandidateComponent","constructor","candidateService","ngOnInit","getAllCandidates","subscribe","candidates","registerCandidate","candidate","createdCandidate","console","log","getCandidateByNationalId","nationalId","updateCandidate","result","deleteCandidate","filter","c","candidateNationalId","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/amirabaris/Documents/Beast-v2/client/src/app/components/candidate/candidate.component.ts","/Users/amirabaris/Documents/Beast-v2/client/src/app/components/candidate/candidate.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from 'src/app/services/candidate.service'; \nimport { PresidentCandidate } from 'src/models/PresidentCandidate';\nimport { Gender } from 'src/Enums/Gender';\nimport { Party } from 'src/Enums/Party';\nimport { State } from 'src/Enums/State';\n\n@Component({\n  selector: 'app-candidate',\n  templateUrl: './candidate.component.html',\n  styleUrls: ['./candidate.component.scss']\n})\nexport class CandidateComponent implements OnInit {\n  candidates: PresidentCandidate[] = [];\n\n  constructor(private candidateService: CandidateService) { }\n\n  ngOnInit() {\n    this.getAllCandidates();\n  }\n\n  getAllCandidates() {\n    this.candidateService.getAllCandidates().subscribe(candidates => {\n      this.candidates = candidates;\n    });\n  }\n\n  registerCandidate(candidate: PresidentCandidate) {\n    this.candidateService.registerCandidate(candidate).subscribe(createdCandidate => {\n      console.log('Candidate registered successfully:', createdCandidate);\n      // refresh the list of candidates after registering a new one\n      this.getAllCandidates();\n    });\n  }\n\n  getCandidateByNationalId(nationalId: string) {\n    this.candidateService.getCandidateByNationalId(nationalId).subscribe(candidate => {\n      console.log('Candidate retrieved successfully:', candidate);\n    });\n  }\n\n  updateCandidate(nationalId: string, candidate: PresidentCandidate) {\n    this.candidateService.updateCandidate(nationalId, candidate).subscribe(result => {\n      console.log('Candidate updated successfully:', result);\n      // refresh the list of candidates after updating one\n      this.getAllCandidates();\n    });\n  }\n\n  deleteCandidate(nationalId: string) {\n    this.candidateService.deleteCandidate(nationalId).subscribe(result => {\n      console.log('Candidate deleted successfully:', result);\n      // remove the deleted candidate from the list of candidates\n      this.candidates = this.candidates.filter(c => c.candidateNationalId !== nationalId);\n    });\n  }\n}","<head>\n  <meta charset=\"UTF-8\">\n  <title>New Presidential Candidate Registration</title>\n</head>\n<body>\n  <h1>New Presidential Candidate Registration</h1>\n  <form action=\"#\" method=\"post\">\n    <label for=\"national-id\">National ID:</label>\n    <input type=\"text\" id=\"national-id\" name=\"candidateNationalId\" required><br><br>\n    \n    <label for=\"first-name\">First Name:</label>\n    <input type=\"text\" id=\"first-name\" name=\"firstName\" required><br><br>\n    \n    <label for=\"last-name\">Last Name:</label>\n    <input type=\"text\" id=\"last-name\" name=\"lastName\" required><br><br>\n    \n    <label for=\"age\">Age:</label>\n    <input type=\"number\" id=\"age\" name=\"age\" min=\"18\" max=\"100\" required><br><br>\n    \n    <label for=\"gender\">Gender:</label>\n    <select id=\"gender\" name=\"gender\" required>\n      <option value=\"\">--Please select a gender--</option>\n      <option value=\"Male\">Male</option>\n      <option value=\"Female\">Female</option>\n      <option value=\"Other\">Other</option>\n    </select><br><br>\n    \n    <label for=\"party\">Party:</label>\n    <select id=\"party\" name=\"party\" required>\n      <option value=\"\">--Please select a party--</option>\n      <option value=\"Democratic Party\">Democratic Party</option>\n      <option value=\"Republican Party\">Republican Party</option>\n      <option value=\"Green Party\">Green Party</option>\n      <option value=\"Libertarian Party\">Libertarian Party</option>\n      <option value=\"Independent\">Independent</option>\n    </select><br><br>\n    \n    <label for=\"address1\">Address Line 1:</label>\n    <input type=\"text\" id=\"address1\" name=\"address.line1\" required><br><br>\n    \n    <label for=\"address2\">Address Line 2:</label>\n    <input type=\"text\" id=\"address2\" name=\"address.line2\"><br><br>\n    \n    <label for=\"city\">City:</label>\n    <input type=\"text\" id=\"city\" name=\"address.city\" required><br><br>\n    \n    <label for=\"state\">State/Province:</label>\n    <input type=\"text\" id=\"state\" name=\"address.state\" required><br><br>\n    \n    <label for=\"zip\">Zip/Postal Code:</label>\n    <input type=\"text\" id=\"zip\" name=\"address.zip\" required><br><br>\n    \n    <input type=\"submit\" value=\"Submit\">\n  </form>\n</body>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}