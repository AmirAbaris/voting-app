{"ast":null,"code":"import { Gender } from 'src/Enums/Gender';\nimport { Party } from 'src/Enums/Party';\nimport { State } from 'src/Enums/State';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/candidate.service\";\nimport * as i2 from \"@angular/forms\";\nexport class CandidateComponent {\n  constructor(candidateService) {\n    this.candidateService = candidateService;\n    this.candidates = [];\n    this.newCandidate = {\n      candidateNationalId: '',\n      firstName: '',\n      lastName: '',\n      age: 0,\n      gender: Gender.Male,\n      party: Party.Republican,\n      address: {\n        city: '',\n        state: State.Hawaii,\n        street: '',\n        zipCode: ''\n      }\n    };\n  }\n  ngOnInit() {\n    this.getAllCandidates();\n  }\n  getAllCandidates() {\n    this.candidateService.getAllCandidates().subscribe(candidates => {\n      this.candidates = candidates;\n    });\n  }\n  registerCandidate() {\n    this.candidateService.registerCandidate(this.newCandidate).subscribe(candidate => {\n      console.log('Candidate registered successfully', candidate);\n      this.getAllCandidates();\n      this.newCandidate = {\n        candidateNationalId: this.newCandidate.candidateNationalId,\n        firstName: this.newCandidate.firstName,\n        lastName: this.newCandidate.lastName,\n        age: this.newCandidate.age,\n        gender: this.newCandidate.gender,\n        party: this.newCandidate.party,\n        address: {\n          city: this.newCandidate.address.city,\n          state: this.newCandidate.address.state,\n          street: this.newCandidate.address.street,\n          zipCode: this.newCandidate.address.zipCode\n        }\n      };\n    });\n  }\n  deleteCandidate(nationalId) {\n    this.candidateService.deleteCandidate(nationalId).subscribe(() => {\n      console.log('Candidate deleted successfully');\n      this.getAllCandidates();\n    });\n  }\n}\nCandidateComponent.ɵfac = function CandidateComponent_Factory(t) {\n  return new (t || CandidateComponent)(i0.ɵɵdirectiveInject(i1.CandidateService));\n};\nCandidateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CandidateComponent,\n  selectors: [[\"app-candidate\"]],\n  decls: 73,\n  vars: 0,\n  consts: [[\"charset\", \"UTF-8\"], [\"id\", \"candidateForm\"], [\"for\", \"candidateNationalId\"], [\"type\", \"text\", \"id\", \"candidateNationalId\", \"name\", \"candidateNationalId\", \"required\", \"\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", \"required\", \"\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", \"required\", \"\"], [\"for\", \"age\"], [\"type\", \"number\", \"id\", \"age\", \"name\", \"age\", \"min\", \"18\", \"max\", \"100\", \"required\", \"\"], [\"for\", \"gender\"], [\"id\", \"gender\", \"name\", \"gender\", \"required\", \"\"], [\"value\", \"\"], [\"value\", \"Male\"], [\"value\", \"Female\"], [\"value\", \"Other\"], [\"for\", \"party\"], [\"id\", \"party\", \"name\", \"party\", \"required\", \"\"], [\"value\", \"Democrat\"], [\"value\", \"Republican\"], [\"for\", \"street\"], [\"type\", \"text\", \"id\", \"street\", \"name\", \"street\", \"required\", \"\"], [\"for\", \"city\"], [\"type\", \"text\", \"id\", \"city\", \"name\", \"city\", \"required\", \"\"], [\"for\", \"state\"], [\"id\", \"state\", \"name\", \"state\", \"required\", \"\"], [\"value\", \"Alabama\"], [\"value\", \"Alaska\"], [\"for\", \"zipCode\"], [\"type\", \"text\", \"id\", \"zipCode\", \"name\", \"zipCode\", \"required\", \"\"], [\"type\", \"submit\", \"onclick\", \"submitForm()\"], [\"lang\", \"en\"], [\"type\", \"submit\"]],\n  template: function CandidateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"head\");\n      i0.ɵɵelement(1, \"meta\", 0);\n      i0.ɵɵelementStart(2, \"title\");\n      i0.ɵɵtext(3, \"Candidate Registration Form\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"body\")(5, \"h1\");\n      i0.ɵɵtext(6, \"Candidate Registration Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"form\", 1)(8, \"label\", 2);\n      i0.ɵɵtext(9, \"National ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 3);\n      i0.ɵɵelementStart(11, \"label\", 4);\n      i0.ɵɵtext(12, \"First Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 5);\n      i0.ɵɵelementStart(14, \"label\", 6);\n      i0.ɵɵtext(15, \"Last Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 7);\n      i0.ɵɵelementStart(17, \"label\", 8);\n      i0.ɵɵtext(18, \"Age:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 9);\n      i0.ɵɵelementStart(20, \"label\", 10);\n      i0.ɵɵtext(21, \"Gender:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"select\", 11)(23, \"option\", 12);\n      i0.ɵɵtext(24, \"-- Select --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"option\", 13);\n      i0.ɵɵtext(26, \"Male\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"option\", 14);\n      i0.ɵɵtext(28, \"Female\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"option\", 15);\n      i0.ɵɵtext(30, \"Other\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"label\", 16);\n      i0.ɵɵtext(32, \"Party:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"select\", 17)(34, \"option\", 12);\n      i0.ɵɵtext(35, \"-- Select --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"option\", 18);\n      i0.ɵɵtext(37, \"Democrat\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"option\", 19);\n      i0.ɵɵtext(39, \"Republican\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"option\", 15);\n      i0.ɵɵtext(41, \"Other\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(42, \"label\", 20);\n      i0.ɵɵtext(43, \"Street:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"input\", 21);\n      i0.ɵɵelementStart(45, \"label\", 22);\n      i0.ɵɵtext(46, \"City:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(47, \"input\", 23);\n      i0.ɵɵelementStart(48, \"label\", 24);\n      i0.ɵɵtext(49, \"State:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"select\", 25)(51, \"option\", 12);\n      i0.ɵɵtext(52, \"-- Select --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"option\", 26);\n      i0.ɵɵtext(54, \"Alabama\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"option\", 27);\n      i0.ɵɵtext(56, \"Alaska\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(57, \"label\", 28);\n      i0.ɵɵtext(58, \"Zip Code:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(59, \"input\", 29);\n      i0.ɵɵelementStart(60, \"button\", 30);\n      i0.ɵɵtext(61, \"Register Candidate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(62, \"html\", 31)(63, \"head\");\n      i0.ɵɵelement(64, \"meta\", 0);\n      i0.ɵɵelementStart(65, \"title\");\n      i0.ɵɵtext(66, \"Candidate Registration Form\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(67, \"body\")(68, \"h1\");\n      i0.ɵɵtext(69, \"Candidate Registration Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(70, \"form\", 1)(71, \"button\", 32);\n      i0.ɵɵtext(72, \"Register Candidate\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.NgControlStatusGroup, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Gender","Party","State","CandidateComponent","constructor","candidateService","candidateNationalId","firstName","lastName","age","gender","Male","party","Republican","address","city","state","Hawaii","street","zipCode","ngOnInit","getAllCandidates","subscribe","candidates","registerCandidate","newCandidate","candidate","console","log","deleteCandidate","nationalId","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/amirabaris/Documents/Beast-v2/client/src/app/components/candidate/candidate.component.ts","/Users/amirabaris/Documents/Beast-v2/client/src/app/components/candidate/candidate.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from 'src/app/services/candidate.service'; \nimport { PresidentCandidate } from 'src/models/PresidentCandidate';\nimport { Gender } from 'src/Enums/Gender';\nimport { Party } from 'src/Enums/Party';\nimport { State } from 'src/Enums/State';\n\n@Component({\n  selector: 'app-candidate',\n  templateUrl: './candidate.component.html',\n  styleUrls: ['./candidate.component.scss']\n})\nexport class CandidateComponent implements OnInit {\n  candidates: PresidentCandidate[] = [];\n  newCandidate: PresidentCandidate = {\n    candidateNationalId: '',\n    firstName: '',\n    lastName: '',\n    age: 0,\n    gender: Gender.Male,\n    party: Party.Republican,\n    address: {\n      city: '',\n      state: State.Hawaii,\n      street: '',\n      zipCode: ''\n    }\n  };\nPresidentCandidate: any;\nGender: any;\nParty: any;\nState: any;\n\n  constructor(private candidateService: CandidateService) {}\n\n  ngOnInit(): void {\n    this.getAllCandidates();\n  }\n\n  getAllCandidates(): void {\n    this.candidateService.getAllCandidates().subscribe((candidates) => {\n      this.candidates = candidates;\n    });\n  }\n\n  registerCandidate(): void {\n    this.candidateService.registerCandidate(this.newCandidate).subscribe((candidate) => {\n      console.log('Candidate registered successfully', candidate);\n      this.getAllCandidates();\n      this.newCandidate = {\n        candidateNationalId: this.newCandidate.candidateNationalId,\n        firstName: this.newCandidate.firstName,\n        lastName: this.newCandidate.lastName,\n        age: this.newCandidate.age,\n        gender: this.newCandidate.gender,\n        party: this.newCandidate.party,\n        address: {\n          city: this.newCandidate.address.city,\n          state: this.newCandidate.address.state,\n          street: this.newCandidate.address.street,\n          zipCode: this.newCandidate.address.zipCode\n        }\n      };\n    });\n  }\n\n  deleteCandidate(nationalId: string): void {\n    this.candidateService.deleteCandidate(nationalId).subscribe(() => {\n      console.log('Candidate deleted successfully');\n      this.getAllCandidates();\n    });\n  }\n}","<head>\n  <meta charset=\"UTF-8\">\n  <title>Candidate Registration Form</title>\n</head>\n<body>\n  <h1>Candidate Registration Form</h1>\n  <form id=\"candidateForm\">\n      <label for=\"candidateNationalId\">National ID:</label>\n      <input type=\"text\" id=\"candidateNationalId\" name=\"candidateNationalId\" required>\n\n      <label for=\"firstName\">First Name:</label>\n      <input type=\"text\" id=\"firstName\" name=\"firstName\" required>\n\n      <label for=\"lastName\">Last Name:</label>\n      <input type=\"text\" id=\"lastName\" name=\"lastName\" required>\n\n      <label for=\"age\">Age:</label>\n      <input type=\"number\" id=\"age\" name=\"age\" min=\"18\" max=\"100\" required>\n\n      <label for=\"gender\">Gender:</label>\n      <select id=\"gender\" name=\"gender\" required>\n          <option value=\"\">-- Select --</option>\n          <option value=\"Male\">Male</option>\n          <option value=\"Female\">Female</option>\n          <option value=\"Other\">Other</option>\n      </select>\n\n      <label for=\"party\">Party:</label>\n      <select id=\"party\" name=\"party\" required>\n          <option value=\"\">-- Select --</option>\n          <option value=\"Democrat\">Democrat</option>\n          <option value=\"Republican\">Republican</option>\n          <option value=\"Other\">Other</option>\n      </select>\n\n      <label for=\"street\">Street:</label>\n      <input type=\"text\" id=\"street\" name=\"street\" required>\n\n      <label for=\"city\">City:</label>\n      <input type=\"text\" id=\"city\" name=\"city\" required>\n\n      <label for=\"state\">State:</label>\n      <select id=\"state\" name=\"state\" required>\n          <option value=\"\">-- Select --</option>\n          <option value=\"Alabama\">Alabama</option>\n          <option value=\"Alaska\">Alaska</option>\n          <!-- Add more states here -->\n      </select>\n\n      <label for=\"zipCode\">Zip Code:</label>\n      <input type=\"text\" id=\"zipCode\" name=\"zipCode\" required>\n\n      <button type=\"submit\" onclick=\"submitForm()\">Register Candidate</button>\n  </form>\n\n  <script>\n      function submitForm() {\n          event.preventDefault();\n\n          const candidateData = {\n              candidateNationalId: document.getElementById(\"candidateNationalId\").value,\n              firstName: document.getElementById(\"firstName\").value,\n              lastName: document.getElementById(\"lastName\").value,\n              age: document.getElementById(\"age\").value,\n              gender: document.getElementById(\"gender\").value,\n              party: document.getElementById(\"party\").value,\n              address: {\n                  city: document.getElementById(\"city\").value,\n                  state: document.getElementById(\"state\").value,\n                  street: document.getElementById(\"street\").value,\n                  zipCode: document.getElementById(\"zipCode\").value\n              }\n          };\n\n          fetch('/api/candidates', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(candidateData)\n          })\n          .then(response => response.json())\n          .then(data => {\n              console.log('Candidate registered successfully:', data);\n              document.getElementById(\"candidateForm\").reset();\n          })\n          .catch(error => console.error('Error registering candidate:', error));\n      }\n  </script>\n</body>\n\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Candidate Registration Form</title>\n</head>\n<body>\n    <h1>Candidate Registration Form</h1>\n    <form id=\"candidateForm\">\n        <!-- form fields here -->\n        <button type=\"submit\">Register Candidate</button>\n    </form>\n\n    <script>\n        function submitForm() {\n            event.preventDefault();\n\n            const candidateData = {\n                // collect form data here\n            };\n\n            fetch('/api/candidates', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(candidateData)\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Candidate registered successfully:', data);\n                document.getElementById(\"candidateForm\").reset();\n            })\n            .catch(error => console.error('Error registering candidate:', error));\n        }\n    </script>\n    \n    <script>\n        const form = document.getElementById(\"candidateForm\");\n        form.addEventListener(\"submit\", function(event) {\n            submitForm();\n        });\n    </script>\n</body>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}