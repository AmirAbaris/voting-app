{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CandidateService {\n  // Inject httpClient\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiBaseUrl = 'http://localhost:5000/';\n  }\n  // Register a new candidate\n  RegisterCandidate(candidate) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.httpClient.post(this.apiBaseUrl + 'register-candidate', candidate, httpOptions);\n  }\n  // Get candidate by national ID\n  getCandidateByNationalId(nationalId) {\n    return this.httpClient.get(this.apiBaseUrl + 'get-candidate-by-national-id/' + nationalId);\n  }\n  // Get candidate by ID\n  getCandidateById(id) {\n    return this.httpClient.get(this.apiBaseUrl + 'get-candidate-by-id/' + id);\n  }\n  // Get all candidates\n  getAllCandidates() {\n    return this.httpClient.get(this.apiBaseUrl + 'get-candidates');\n  }\n  // Update candidate by national ID\n  updateCandidateByNationalId(nationalId, candidateIn) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.httpClient.put(this.apiBaseUrl + 'update-candidate-by-national-id/' + nationalId, candidateIn, httpOptions);\n  }\n  // Delete candidate by national ID\n  deleteCandidateByNationalId(nationalId) {\n    return this.httpClient.delete(this.apiBaseUrl + 'delete-candidate-by-national-id/' + nationalId);\n  }\n}\nCandidateService.ɵfac = function CandidateService_Factory(t) {\n  return new (t || CandidateService)(i0.ɵɵinject(i1.HttpClient));\n};\nCandidateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CandidateService,\n  factory: CandidateService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,OAAM,MAAOC,gBAAgB;EAG3B;EACAC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAHtB,eAAU,GAAG,wBAAwB;EAGA;EAE7C;EACOC,iBAAiB,CAACC,SAA6B;IACpD,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIP,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;IAED,OAAO,IAAI,CAACG,UAAU,CAACK,IAAI,CAAqB,IAAI,CAACC,UAAU,GAAG,oBAAoB,EAAEJ,SAAS,EAAEC,WAAW,CAAC;EACjH;EAEA;EACOI,wBAAwB,CAACC,UAAkB;IAChD,OAAO,IAAI,CAACR,UAAU,CAACS,GAAG,CAAqB,IAAI,CAACH,UAAU,GAAG,+BAA+B,GAAGE,UAAU,CAAC;EAChH;EAEA;EACOE,gBAAgB,CAACC,EAAU;IAChC,OAAO,IAAI,CAACX,UAAU,CAACS,GAAG,CAAqB,IAAI,CAACH,UAAU,GAAG,sBAAsB,GAAGK,EAAE,CAAC;EAC/F;EAEA;EACOC,gBAAgB;IACrB,OAAO,IAAI,CAACZ,UAAU,CAACS,GAAG,CAAqB,IAAI,CAACH,UAAU,GAAG,gBAAgB,CAAC;EACpF;EAEA;EACOO,2BAA2B,CAChCL,UAAkB,EAAEM,WAA+B;IAEnD,MAAMX,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIP,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;IAED,OAAO,IAAI,CAACG,UAAU,CAACe,GAAG,CAAM,IAAI,CAACT,UAAU,GAAG,kCAAkC,GAAGE,UAAU,EAAEM,WAAW,EAAEX,WAAW,CAAC;EAC9H;EAEE;EACOa,2BAA2B,CAACR,UAAkB;IACnD,OAAO,IAAI,CAACR,UAAU,CAACiB,MAAM,CAAM,IAAI,CAACX,UAAU,GAAG,kCAAkC,GAAGE,UAAU,CAAC;EACvG;;AA5CSV,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAoB,SAAhBpB,gBAAgB;EAAAqB,YAFf;AAAM","names":["HttpHeaders","CandidateService","constructor","httpClient","RegisterCandidate","candidate","httpOptions","headers","post","apiBaseUrl","getCandidateByNationalId","nationalId","get","getCandidateById","id","getAllCandidates","updateCandidateByNationalId","candidateIn","put","deleteCandidateByNationalId","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/amirabaris/Documents/Beast-v2/client/src/app/services/candidate.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { PresidentCandidate } from 'src/models/PresidentCandidate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CandidateService {\n  private apiBaseUrl = 'http://localhost:5000/';\n\n  // Inject httpClient\n  constructor(private httpClient: HttpClient) {}\n\n  // Register a new candidate\n  public RegisterCandidate(candidate: PresidentCandidate): Observable<PresidentCandidate> {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n\n    return this.httpClient.post<PresidentCandidate>(this.apiBaseUrl + 'register-candidate', candidate, httpOptions);\n  }\n\n  // Get candidate by national ID\n  public getCandidateByNationalId(nationalId: string): Observable<PresidentCandidate> {\n    return this.httpClient.get<PresidentCandidate>(this.apiBaseUrl + 'get-candidate-by-national-id/' + nationalId);\n  }\n\n  // Get candidate by ID\n  public getCandidateById(id: string): Observable<PresidentCandidate> {\n    return this.httpClient.get<PresidentCandidate>(this.apiBaseUrl + 'get-candidate-by-id/' + id);\n  }\n\n  // Get all candidates\n  public getAllCandidates(): Observable<PresidentCandidate> {\n    return this.httpClient.get<PresidentCandidate>(this.apiBaseUrl + 'get-candidates');\n  }\n\n  // Update candidate by national ID\n  public updateCandidateByNationalId(\n    nationalId: string, candidateIn: PresidentCandidate\n  ): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    }\n\n    return this.httpClient.put<any>(this.apiBaseUrl + 'update-candidate-by-national-id/' + nationalId, candidateIn, httpOptions);\n  }\n\n    // Delete candidate by national ID\n    public deleteCandidateByNationalId(nationalId: string): Observable<any> {\n      return this.httpClient.delete<any>(this.apiBaseUrl + 'delete-candidate-by-national-id/' + nationalId);\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}