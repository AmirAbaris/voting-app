{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CandidateComponent = class CandidateComponent {\n  constructor(candidateService) {\n    this.candidateService = candidateService;\n    this.candidates = [];\n  }\n  ngOnInit() {\n    this.getAllCandidates();\n  }\n  getAllCandidates() {\n    this.candidateService.getAllCandidates().subscribe(candidates => {\n      this.candidates = candidates;\n    });\n  }\n  registerCandidate(candidate) {\n    this.candidateService.registerCandidate(candidate).subscribe(createdCandidate => {\n      console.log('Candidate registered successfully:', createdCandidate);\n      // refresh the list of candidates after registering a new one\n      this.getAllCandidates();\n    });\n  }\n  getCandidateByNationalId(nationalId) {\n    this.candidateService.getCandidateByNationalId(nationalId).subscribe(candidate => {\n      console.log('Candidate retrieved successfully:', candidate);\n    });\n  }\n  updateCandidate(nationalId, candidate) {\n    this.candidateService.updateCandidate(nationalId, candidate).subscribe(result => {\n      console.log('Candidate updated successfully:', result);\n      // refresh the list of candidates after updating one\n      this.getAllCandidates();\n    });\n  }\n  deleteCandidate(nationalId) {\n    this.candidateService.deleteCandidate(nationalId).subscribe(result => {\n      console.log('Candidate deleted successfully:', result);\n      // remove the deleted candidate from the list of candidates\n      this.candidates = this.candidates.filter(c => c.candidateNationalId !== nationalId);\n    });\n  }\n};\nCandidateComponent = __decorate([Component({\n  selector: 'app-candidate',\n  templateUrl: './candidate.component.html',\n  styleUrls: ['./candidate.component.scss']\n})], CandidateComponent);\nexport { CandidateComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAG7BC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAFpC,eAAU,GAAyB,EAAE;EAEqB;EAE1DC,QAAQ;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgB;IACd,IAAI,CAACF,gBAAgB,CAACE,gBAAgB,EAAE,CAACC,SAAS,CAACC,UAAU,IAAG;MAC9D,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC9B,CAAC,CAAC;EACJ;EAEAC,iBAAiB,CAACC,SAA6B;IAC7C,IAAI,CAACN,gBAAgB,CAACK,iBAAiB,CAACC,SAAS,CAAC,CAACH,SAAS,CAACI,gBAAgB,IAAG;MAC9EC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,gBAAgB,CAAC;MACnE;MACA,IAAI,CAACL,gBAAgB,EAAE;IACzB,CAAC,CAAC;EACJ;EAEAQ,wBAAwB,CAACC,UAAkB;IACzC,IAAI,CAACX,gBAAgB,CAACU,wBAAwB,CAACC,UAAU,CAAC,CAACR,SAAS,CAACG,SAAS,IAAG;MAC/EE,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEH,SAAS,CAAC;IAC7D,CAAC,CAAC;EACJ;EAEAM,eAAe,CAACD,UAAkB,EAAEL,SAA6B;IAC/D,IAAI,CAACN,gBAAgB,CAACY,eAAe,CAACD,UAAU,EAAEL,SAAS,CAAC,CAACH,SAAS,CAACU,MAAM,IAAG;MAC9EL,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEI,MAAM,CAAC;MACtD;MACA,IAAI,CAACX,gBAAgB,EAAE;IACzB,CAAC,CAAC;EACJ;EAEAY,eAAe,CAACH,UAAkB;IAChC,IAAI,CAACX,gBAAgB,CAACc,eAAe,CAACH,UAAU,CAAC,CAACR,SAAS,CAACU,MAAM,IAAG;MACnEL,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEI,MAAM,CAAC;MACtD;MACA,IAAI,CAACT,UAAU,GAAG,IAAI,CAACA,UAAU,CAACW,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,mBAAmB,KAAKN,UAAU,CAAC;IACrF,CAAC,CAAC;EACJ;CACD;AA5CYb,kBAAkB,eAL9BD,SAAS,CAAC;EACTqB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GACWtB,kBAAkB,CA4C9B;SA5CYA,kBAAkB","names":["Component","CandidateComponent","constructor","candidateService","ngOnInit","getAllCandidates","subscribe","candidates","registerCandidate","candidate","createdCandidate","console","log","getCandidateByNationalId","nationalId","updateCandidate","result","deleteCandidate","filter","c","candidateNationalId","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/amirabaris/Documents/Beast-v2/client/src/app/components/candidate/candidate.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from 'src/app/services/candidate.service'; \nimport { PresidentCandidate } from 'src/models/PresidentCandidate';\nimport { Gender } from 'src/Enums/Gender';\nimport { Party } from 'src/Enums/Party';\nimport { State } from 'src/Enums/State';\n\n@Component({\n  selector: 'app-candidate',\n  templateUrl: './candidate.component.html',\n  styleUrls: ['./candidate.component.scss']\n})\nexport class CandidateComponent implements OnInit {\n  candidates: PresidentCandidate[] = [];\n\n  constructor(private candidateService: CandidateService) { }\n\n  ngOnInit() {\n    this.getAllCandidates();\n  }\n\n  getAllCandidates() {\n    this.candidateService.getAllCandidates().subscribe(candidates => {\n      this.candidates = candidates;\n    });\n  }\n\n  registerCandidate(candidate: PresidentCandidate) {\n    this.candidateService.registerCandidate(candidate).subscribe(createdCandidate => {\n      console.log('Candidate registered successfully:', createdCandidate);\n      // refresh the list of candidates after registering a new one\n      this.getAllCandidates();\n    });\n  }\n\n  getCandidateByNationalId(nationalId: string) {\n    this.candidateService.getCandidateByNationalId(nationalId).subscribe(candidate => {\n      console.log('Candidate retrieved successfully:', candidate);\n    });\n  }\n\n  updateCandidate(nationalId: string, candidate: PresidentCandidate) {\n    this.candidateService.updateCandidate(nationalId, candidate).subscribe(result => {\n      console.log('Candidate updated successfully:', result);\n      // refresh the list of candidates after updating one\n      this.getAllCandidates();\n    });\n  }\n\n  deleteCandidate(nationalId: string) {\n    this.candidateService.deleteCandidate(nationalId).subscribe(result => {\n      console.log('Candidate deleted successfully:', result);\n      // remove the deleted candidate from the list of candidates\n      this.candidates = this.candidates.filter(c => c.candidateNationalId !== nationalId);\n    });\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}