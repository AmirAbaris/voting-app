{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/candidate.service\";\nexport class CandidateComponent {\n  constructor(candidateService) {\n    this.candidateService = candidateService;\n    this.candidates = [];\n    this.newCandidate = {\n      candidateNationalId: '',\n      firstName: '',\n      lastName: '',\n      age: 0,\n      gender: Gender.Male,\n      party: Party.Republican,\n      address: {\n        city: '',\n        state: State.California,\n        street: '',\n        zipCode: ''\n      }\n    };\n  }\n  ngOnInit() {\n    this.getAllCandidates();\n  }\n  getAllCandidates() {\n    this.candidateService.getAllCandidates().subscribe(candidate => {\n      this.candidates.push(candidate);\n    });\n  }\n  registerCandidate() {\n    this.candidateService.registerCandidate(this.newCandidate).subscribe(candidate => {\n      console.log('Candidate registered successfully', candidate);\n      this.getAllCandidates();\n      this.newCandidate = {\n        candidateNationalId: '',\n        firstName: '',\n        lastName: '',\n        age: 0,\n        gender: Gender.Male,\n        party: Party.Republican,\n        address: {\n          city: '',\n          state: State.California,\n          street: '',\n          zipCode: ''\n        }\n      };\n    });\n  }\n  deleteCandidate(nationalId) {\n    this.candidateService.deleteCandidateByNationalId(nationalId).subscribe(() => {\n      console.log('Candidate deleted successfully');\n      this.getAllCandidates();\n    }, error => {\n      console.log(error);\n    });\n  }\n}\nCandidateComponent.ɵfac = function CandidateComponent_Factory(t) {\n  return new (t || CandidateComponent)(i0.ɵɵdirectiveInject(i1.CandidateService));\n};\nCandidateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CandidateComponent,\n  selectors: [[\"app-candidate\"]],\n  decls: 2,\n  vars: 0,\n  template: function CandidateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"candidate works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,kBAAkB;EAiB7BC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAhBpC,eAAU,GAAyB,EAAE;IACrC,iBAAY,GAAuB;MACjCC,mBAAmB,EAAE,EAAE;MACvBC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAE,CAAC;MACNC,MAAM,EAAEC,MAAM,CAACC,IAAI;MACnBC,KAAK,EAAEC,KAAK,CAACC,UAAU;MACvBC,OAAO,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAEC,KAAK,CAACC,UAAU;QACvBC,MAAM,EAAE,EAAE;QACVC,OAAO,EAAE;;KAEZ;EAEyD;EAE1DC,QAAQ;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgB;IACd,IAAI,CAACnB,gBAAgB,CAACmB,gBAAgB,EAAE,CACrCC,SAAS,CAAEC,SAA6B,IAAI;MAC3C,IAAI,CAACC,UAAU,CAACC,IAAI,CAACF,SAAS,CAAC;IACjC,CAAC,CAAC;EACN;EAEAG,iBAAiB;IACf,IAAI,CAACxB,gBAAgB,CAACwB,iBAAiB,CAAC,IAAI,CAACC,YAAY,CAAC,CAACL,SAAS,CAAEC,SAAS,IAAI;MACjFK,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEN,SAAS,CAAC;MAC3D,IAAI,CAACF,gBAAgB,EAAE;MACvB,IAAI,CAACM,YAAY,GAAG;QAClBxB,mBAAmB,EAAE,EAAE;QACvBC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,GAAG,EAAE,CAAC;QACNC,MAAM,EAAEC,MAAM,CAACC,IAAI;QACnBC,KAAK,EAAEC,KAAK,CAACC,UAAU;QACvBC,OAAO,EAAE;UACPC,IAAI,EAAE,EAAE;UACRC,KAAK,EAAEC,KAAK,CAACC,UAAU;UACvBC,MAAM,EAAE,EAAE;UACVC,OAAO,EAAE;;OAEZ;IACH,CAAC,CAAC;EACJ;EAGAW,eAAe,CAACC,UAAkB;IAChC,IAAI,CAAC7B,gBAAgB,CAAC8B,2BAA2B,CAACD,UAAU,CAAC,CAACT,SAAS,CACrE,MAAK;MACHM,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7C,IAAI,CAACR,gBAAgB,EAAE;IACzB,CAAC,EACAY,KAAU,IAAI;MACbL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IACpB,CAAC,CACF;EACH;;AA9DWjC,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAkC;EAAAC;EAAAC;EAAAC;IAAA;MCV/BC,yBAAG;MAAAA,gCAAgB;MAAAA,iBAAI","names":["CandidateComponent","constructor","candidateService","candidateNationalId","firstName","lastName","age","gender","Gender","Male","party","Party","Republican","address","city","state","State","California","street","zipCode","ngOnInit","getAllCandidates","subscribe","candidate","candidates","push","registerCandidate","newCandidate","console","log","deleteCandidate","nationalId","deleteCandidateByNationalId","error","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/Users/amirabaris/Documents/Beast-v2/client/src/app/candidate/candidate.component.ts","/Users/amirabaris/Documents/Beast-v2/client/src/app/candidate/candidate.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from '../services/candidate.service';\nimport { PresidentCandidate } from 'src/models/PresidentCandidate';\nimport { Enums }from \n\n@Component({\n  selector: 'app-candidate',\n  templateUrl: './candidate.component.html',\n  styleUrls: ['./candidate.component.scss']\n})\nexport class CandidateComponent implements OnInit {\n  candidates: PresidentCandidate[] = []\n  newCandidate: PresidentCandidate = {\n    candidateNationalId: '',\n    firstName: '',\n    lastName: '',\n    age: 0,\n    gender: Gender.Male,\n    party: Party.Republican,\n    address: {\n      city: '',\n      state: State.California,\n      street: '',\n      zipCode: ''\n    }\n  };\n\n  constructor(private candidateService: CandidateService) { }\n\n  ngOnInit(): void {\n    this.getAllCandidates();\n  }\n\n  getAllCandidates(): void {\n    this.candidateService.getAllCandidates()\n      .subscribe((candidate: PresidentCandidate) => {\n        this.candidates.push(candidate);\n      });\n  }  \n\n  registerCandidate(): void {\n    this.candidateService.registerCandidate(this.newCandidate).subscribe((candidate) => {\n      console.log('Candidate registered successfully', candidate);\n      this.getAllCandidates();\n      this.newCandidate = {\n        candidateNationalId: '',\n        firstName: '',\n        lastName: '',\n        age: 0,\n        gender: Gender.Male,\n        party: Party.Republican,\n        address: {\n          city: '',\n          state: State.California,\n          street: '',\n          zipCode: ''\n        }\n      };\n    });\n  }\n\n\n  deleteCandidate(nationalId: string): void {\n    this.candidateService.deleteCandidateByNationalId(nationalId).subscribe(\n      () => {\n        console.log('Candidate deleted successfully');\n        this.getAllCandidates();\n      },\n      (error: any) => {\n        console.log(error);\n      }\n    );\n  }\n}","<p>candidate works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}