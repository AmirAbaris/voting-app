{"ast":null,"code":"import { Gender } from 'src/Enums/Gender';\nimport { Party } from 'src/Enums/Party';\nimport { State } from 'src/Enums/State';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/candidate.service\";\nimport * as i2 from \"@angular/common\";\nfunction CandidateComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const candidate_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", candidate_r1.firstName, \" \", candidate_r1.lastName, \" \");\n  }\n}\nexport class CandidateComponent {\n  constructor(candidateService) {\n    this.candidateService = candidateService;\n    this.candidates = [];\n    this.newCandidate = {\n      candidateNationalId: '',\n      firstName: '',\n      lastName: '',\n      age: 0,\n      gender: Gender.Male,\n      party: Party.Republican,\n      address: {\n        city: '',\n        state: State.California,\n        street: '',\n        zipCode: ''\n      }\n    };\n  }\n  ngOnInit() {\n    this.getAllCandidates();\n  }\n  getAllCandidates() {\n    this.candidateService.getAllCandidates().subscribe(candidate => {\n      this.candidates.push(candidate);\n    });\n  }\n  registerCandidate() {\n    this.candidateService.registerCandidate(this.newCandidate).subscribe(candidate => {\n      console.log('Candidate registered successfully', candidate);\n      this.getAllCandidates();\n      this.newCandidate = {\n        candidateNationalId: candidate.candidateNationalId,\n        firstName: candidate.firstName,\n        lastName: candidate.lastName,\n        age: candidate.age,\n        gender: candidate.gender,\n        party: candidate.party,\n        address: {\n          city: candidate.address.city,\n          state: candidate.address.state,\n          street: candidate.address.state,\n          zipCode: candidate.address.zipCode\n        }\n      };\n    });\n  }\n  deleteCandidate(nationalId) {\n    this.candidateService.deleteCandidateByNationalId(nationalId).subscribe(() => {\n      console.log('Candidate deleted successfully');\n      this.getAllCandidates();\n    }, error => {\n      console.log(error);\n    });\n  }\n}\nCandidateComponent.ɵfac = function CandidateComponent_Factory(t) {\n  return new (t || CandidateComponent)(i0.ɵɵdirectiveInject(i1.CandidateService));\n};\nCandidateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CandidateComponent,\n  selectors: [[\"app-candidate\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function CandidateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"List of Candidates\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ul\");\n      i0.ɵɵtemplate(3, CandidateComponent_li_3_Template, 2, 2, \"li\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.candidates);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,MAAM,QAAQ,kBAAkB;AACzC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,KAAK,QAAQ,iBAAiB;;;;;;ICHrCC,0BAAyC;IACvCA,YACF;IAAAA,iBAAK;;;;IADHA,eACF;IADEA,mFACF;;;ADQF,OAAM,MAAOC,kBAAkB;EAiB7BC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAhBpC,eAAU,GAAyB,EAAE;IACrC,iBAAY,GAAuB;MACjCC,mBAAmB,EAAE,EAAE;MACvBC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAE,CAAC;MACNC,MAAM,EAAEX,MAAM,CAACY,IAAI;MACnBC,KAAK,EAAEZ,KAAK,CAACa,UAAU;MACvBC,OAAO,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAEf,KAAK,CAACgB,UAAU;QACvBC,MAAM,EAAE,EAAE;QACVC,OAAO,EAAE;;KAEZ;EAEyD;EAE1DC,QAAQ;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgB;IACd,IAAI,CAAChB,gBAAgB,CAACgB,gBAAgB,EAAE,CACrCC,SAAS,CAAEC,SAA6B,IAAI;MAC3C,IAAI,CAACC,UAAU,CAACC,IAAI,CAACF,SAAS,CAAC;IACjC,CAAC,CAAC;EACN;EAEAG,iBAAiB;IACf,IAAI,CAACrB,gBAAgB,CAACqB,iBAAiB,CAAC,IAAI,CAACC,YAAY,CAAC,CAACL,SAAS,CAAEC,SAAS,IAAI;MACjFK,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEN,SAAS,CAAC;MAC3D,IAAI,CAACF,gBAAgB,EAAE;MACvB,IAAI,CAACM,YAAY,GAAG;QAClBrB,mBAAmB,EAAEiB,SAAS,CAACjB,mBAAmB;QAClDC,SAAS,EAAEgB,SAAS,CAAChB,SAAS;QAC9BC,QAAQ,EAAEe,SAAS,CAACf,QAAQ;QAC5BC,GAAG,EAAEc,SAAS,CAACd,GAAG;QAClBC,MAAM,EAAEa,SAAS,CAACb,MAAM;QACxBE,KAAK,EAAEW,SAAS,CAACX,KAAK;QACtBE,OAAO,EAAE;UACPC,IAAI,EAAEQ,SAAS,CAACT,OAAO,CAACC,IAAI;UAC5BC,KAAK,EAAEO,SAAS,CAACT,OAAO,CAACE,KAAK;UAC9BE,MAAM,EAAEK,SAAS,CAACT,OAAO,CAACE,KAAK;UAC/BG,OAAO,EAAEI,SAAS,CAACT,OAAO,CAACK;;OAE9B;IACH,CAAC,CAAC;EACJ;EAEAW,eAAe,CAACC,UAAkB;IAChC,IAAI,CAAC1B,gBAAgB,CAAC2B,2BAA2B,CAACD,UAAU,CAAC,CAACT,SAAS,CACrE,MAAK;MACHM,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7C,IAAI,CAACR,gBAAgB,EAAE;IACzB,CAAC,EACAY,KAAU,IAAI;MACbL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IACpB,CAAC,CACF;EACH;;AA7DW9B,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ/BpC,0BAAI;MAAAA,kCAAkB;MAAAA,iBAAK;MAC3BA,0BAAI;MACFA,iEAEK;MACPA,iBAAK;;;MAHuBA,eAAa;MAAbA,wCAAa","names":["Gender","Party","State","i0","CandidateComponent","constructor","candidateService","candidateNationalId","firstName","lastName","age","gender","Male","party","Republican","address","city","state","California","street","zipCode","ngOnInit","getAllCandidates","subscribe","candidate","candidates","push","registerCandidate","newCandidate","console","log","deleteCandidate","nationalId","deleteCandidateByNationalId","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/amirabaris/Documents/Beast-v2/client/src/app/components/candidate/candidate.component.ts","/Users/amirabaris/Documents/Beast-v2/client/src/app/components/candidate/candidate.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from 'src/app/services/candidate.service'; \nimport { PresidentCandidate } from 'src/models/PresidentCandidate';\nimport { Gender } from 'src/Enums/Gender';\nimport { Party } from 'src/Enums/Party';\nimport { State } from 'src/Enums/State';\n\n@Component({\n  selector: 'app-candidate',\n  templateUrl: './candidate.component.html',\n  styleUrls: ['./candidate.component.scss']\n})\nexport class CandidateComponent implements OnInit {\n  candidates: PresidentCandidate[] = []\n  newCandidate: PresidentCandidate = {\n    candidateNationalId: '',\n    firstName: '',\n    lastName: '',\n    age: 0,\n    gender: Gender.Male,\n    party: Party.Republican,\n    address: {\n      city: '',\n      state: State.California,\n      street: '',\n      zipCode: ''\n    }\n  };\n\n  constructor(private candidateService: CandidateService) { }\n\n  ngOnInit(): void {\n    this.getAllCandidates();\n  }\n\n  getAllCandidates(): void {\n    this.candidateService.getAllCandidates()\n      .subscribe((candidate: PresidentCandidate) => {\n        this.candidates.push(candidate);\n      });\n  }  \n\n  registerCandidate(): void {\n    this.candidateService.registerCandidate(this.newCandidate).subscribe((candidate) => {\n      console.log('Candidate registered successfully', candidate);\n      this.getAllCandidates();\n      this.newCandidate = {\n        candidateNationalId: candidate.candidateNationalId,\n        firstName: candidate.firstName,\n        lastName: candidate.lastName,\n        age: candidate.age,\n        gender: candidate.gender,\n        party: candidate.party,\n        address: {\n          city: candidate.address.city,\n          state: candidate.address.state,\n          street: candidate.address.state,\n          zipCode: candidate.address.zipCode\n        }\n      };\n    });\n  }\n\n  deleteCandidate(nationalId: string): void {\n    this.candidateService.deleteCandidateByNationalId(nationalId).subscribe(\n      () => {\n        console.log('Candidate deleted successfully');\n        this.getAllCandidates();\n      },\n      (error: any) => {\n        console.log(error);\n      }\n    );\n  }\n}","<h2>List of Candidates</h2>\n<ul>\n  <li *ngFor=\"let candidate of candidates\">\n    {{ candidate.firstName }} {{ candidate.lastName }}\n  </li>\n</ul>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}