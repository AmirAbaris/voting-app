{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/candidate.service\";\nimport * as i2 from \"@angular/common\";\nfunction CandidateComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const candidate_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", candidate_r1.firstName, \" \", candidate_r1.lastName, \" \");\n  }\n}\nexport class CandidateComponent {\n  constructor(candidateService) {\n    this.candidateService = candidateService;\n    this.candidates = [];\n  }\n  ngOnInit() {\n    this.getAllCandidates();\n  }\n  getAllCandidates() {\n    this.candidateService.getAllCandidates().subscribe(candidates => {\n      this.candidates = candidates;\n    });\n  }\n  registerCandidate(candidate) {\n    this.candidateService.registerCandidate(candidate).subscribe(createdCandidate => {\n      console.log('Candidate registered successfully:', createdCandidate);\n      // refresh the list of candidates after registering a new one\n      this.getAllCandidates();\n    });\n  }\n  getCandidateByNationalId(nationalId) {\n    this.candidateService.getCandidateByNationalId(nationalId).subscribe(candidate => {\n      console.log('Candidate retrieved successfully:', candidate);\n    });\n  }\n  updateCandidate(nationalId, candidate) {\n    this.candidateService.updateCandidate(nationalId, candidate).subscribe(result => {\n      console.log('Candidate updated successfully:', result);\n      // refresh the list of candidates after updating one\n      this.getAllCandidates();\n    });\n  }\n  deleteCandidate(nationalId) {\n    this.candidateService.deleteCandidate(nationalId).subscribe(result => {\n      console.log('Candidate deleted successfully:', result);\n      // remove the deleted candidate from the list of candidates\n      this.candidates = this.candidates.filter(c => c.nationalId !== nationalId);\n    });\n  }\n}\nCandidateComponent.ɵfac = function CandidateComponent_Factory(t) {\n  return new (t || CandidateComponent)(i0.ɵɵdirectiveInject(i1.CandidateService));\n};\nCandidateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CandidateComponent,\n  selectors: [[\"app-candidate\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function CandidateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"List of Candidates\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ul\");\n      i0.ɵɵtemplate(3, CandidateComponent_li_3_Template, 2, 2, \"li\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.candidates);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAEEA,0BAAyC;IACvCA,YACF;IAAAA,iBAAK;;;;IADHA,eACF;IADEA,mFACF;;;ACQF,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAFpC,eAAU,GAAyB,EAAE;EAEqB;EAE1DC,QAAQ;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgB;IACd,IAAI,CAACF,gBAAgB,CAACE,gBAAgB,EAAE,CAACC,SAAS,CAACC,UAAU,IAAG;MAC9D,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC9B,CAAC,CAAC;EACJ;EAEAC,iBAAiB,CAACC,SAA6B;IAC7C,IAAI,CAACN,gBAAgB,CAACK,iBAAiB,CAACC,SAAS,CAAC,CAACH,SAAS,CAACI,gBAAgB,IAAG;MAC9EC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,gBAAgB,CAAC;MACnE;MACA,IAAI,CAACL,gBAAgB,EAAE;IACzB,CAAC,CAAC;EACJ;EAEAQ,wBAAwB,CAACC,UAAkB;IACzC,IAAI,CAACX,gBAAgB,CAACU,wBAAwB,CAACC,UAAU,CAAC,CAACR,SAAS,CAACG,SAAS,IAAG;MAC/EE,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEH,SAAS,CAAC;IAC7D,CAAC,CAAC;EACJ;EAEAM,eAAe,CAACD,UAAkB,EAAEL,SAA6B;IAC/D,IAAI,CAACN,gBAAgB,CAACY,eAAe,CAACD,UAAU,EAAEL,SAAS,CAAC,CAACH,SAAS,CAACU,MAAM,IAAG;MAC9EL,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEI,MAAM,CAAC;MACtD;MACA,IAAI,CAACX,gBAAgB,EAAE;IACzB,CAAC,CAAC;EACJ;EAEAY,eAAe,CAACH,UAAkB;IAChC,IAAI,CAACX,gBAAgB,CAACc,eAAe,CAACH,UAAU,CAAC,CAACR,SAAS,CAACU,MAAM,IAAG;MACnEL,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEI,MAAM,CAAC;MACtD;MACA,IAAI,CAACT,UAAU,GAAG,IAAI,CAACA,UAAU,CAACW,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACL,UAAU,KAAKA,UAAU,CAAC;IAC5E,CAAC,CAAC;EACJ;;AA3CWb,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZ/BxB,0BAAI;MAAAA,kCAAkB;MAAAA,iBAAK;MAC3BA,0BAAI;MACFA,iEAEK;MACPA,iBAAK;;;MAHuBA,eAAa;MAAbA,wCAAa","names":["i0","CandidateComponent","constructor","candidateService","ngOnInit","getAllCandidates","subscribe","candidates","registerCandidate","candidate","createdCandidate","console","log","getCandidateByNationalId","nationalId","updateCandidate","result","deleteCandidate","filter","c","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/amirabaris/Documents/Beast-v2/client/src/app/components/candidate/candidate.component.html","/Users/amirabaris/Documents/Beast-v2/client/src/app/components/candidate/candidate.component.ts"],"sourcesContent":["<h2>List of Candidates</h2>\n<ul>\n  <li *ngFor=\"let candidate of candidates\">\n    {{ candidate.firstName }} {{ candidate.lastName }}\n  </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from 'src/app/services/candidate.service'; \nimport { PresidentCandidate } from 'src/models/PresidentCandidate';\nimport { Gender } from 'src/Enums/Gender';\nimport { Party } from 'src/Enums/Party';\nimport { State } from 'src/Enums/State';\n\n@Component({\n  selector: 'app-candidate',\n  templateUrl: './candidate.component.html',\n  styleUrls: ['./candidate.component.scss']\n})\nexport class CandidateComponent implements OnInit {\n  candidates: PresidentCandidate[] = [];\n\n  constructor(private candidateService: CandidateService) { }\n\n  ngOnInit() {\n    this.getAllCandidates();\n  }\n\n  getAllCandidates() {\n    this.candidateService.getAllCandidates().subscribe(candidates => {\n      this.candidates = candidates;\n    });\n  }\n\n  registerCandidate(candidate: PresidentCandidate) {\n    this.candidateService.registerCandidate(candidate).subscribe(createdCandidate => {\n      console.log('Candidate registered successfully:', createdCandidate);\n      // refresh the list of candidates after registering a new one\n      this.getAllCandidates();\n    });\n  }\n\n  getCandidateByNationalId(nationalId: string) {\n    this.candidateService.getCandidateByNationalId(nationalId).subscribe(candidate => {\n      console.log('Candidate retrieved successfully:', candidate);\n    });\n  }\n\n  updateCandidate(nationalId: string, candidate: PresidentCandidate) {\n    this.candidateService.updateCandidate(nationalId, candidate).subscribe(result => {\n      console.log('Candidate updated successfully:', result);\n      // refresh the list of candidates after updating one\n      this.getAllCandidates();\n    });\n  }\n\n  deleteCandidate(nationalId: string) {\n    this.candidateService.deleteCandidate(nationalId).subscribe(result => {\n      console.log('Candidate deleted successfully:', result);\n      // remove the deleted candidate from the list of candidates\n      this.candidates = this.candidates.filter(c => c.nationalId !== nationalId);\n    });\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}