{"ast":null,"code":"import { Gender } from 'src/Enums/Gender';\nimport { Party } from 'src/Enums/Party';\nimport { State } from 'src/Enums/State';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/candidate.service\";\nimport * as i2 from \"@angular/forms\";\nexport class CandidateComponent {\n  constructor(candidateService) {\n    this.candidateService = candidateService;\n    this.candidates = [];\n    this.newCandidate = {\n      candidateNationalId: '',\n      firstName: '',\n      lastName: '',\n      age: 0,\n      gender: Gender.Male,\n      party: Party.Republican,\n      address: {\n        city: '',\n        state: State.Alabama,\n        street: '',\n        zipCode: ''\n      }\n    };\n  }\n  ngOnInit() {\n    this.getAllCandidates();\n  }\n  getAllCandidates() {\n    this.candidateService.getAllCandidates().subscribe(candidates => {\n      this.candidates = candidates;\n    });\n  }\n  registerCandidate() {\n    this.candidateService.registerCandidate(this.newCandidate).subscribe(candidate => {\n      console.log('Candidate registered successfully', candidate);\n      this.getAllCandidates();\n      this.newCandidate = {\n        candidateNationalId: this.newCandidate.candidateNationalId,\n        firstName: this.newCandidate.firstName,\n        lastName: this.newCandidate.lastName,\n        age: this.newCandidate.age,\n        gender: this.newCandidate.gender,\n        party: this.newCandidate.party,\n        address: {\n          city: this.newCandidate.address.city,\n          state: this.newCandidate.address.state,\n          street: this.newCandidate.address.street,\n          zipCode: this.newCandidate.address.zipCode\n        }\n      };\n    });\n  }\n  deleteCandidate(nationalId) {\n    this.candidateService.deleteCandidate(nationalId).subscribe(() => {\n      console.log('Candidate deleted successfully');\n      this.getAllCandidates();\n    });\n  }\n}\nCandidateComponent.ɵfac = function CandidateComponent_Factory(t) {\n  return new (t || CandidateComponent)(i0.ɵɵdirectiveInject(i1.CandidateService));\n};\nCandidateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CandidateComponent,\n  selectors: [[\"app-candidate\"]],\n  decls: 49,\n  vars: 18,\n  consts: [[\"for\", \"nationalId\"], [\"type\", \"text\", \"name\", \"nationalId\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"name\", \"firstName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"name\", \"lastName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"age\"], [\"type\", \"number\", \"name\", \"age\", \"min\", \"18\", \"max\", \"100\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"gender\"], [\"name\", \"gender\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"], [\"for\", \"party\"], [\"name\", \"party\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"street\"], [\"type\", \"text\", \"name\", \"street\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"city\"], [\"type\", \"text\", \"name\", \"city\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"state\"], [\"name\", \"state\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"zipCode\"], [\"type\", \"text\", \"name\", \"zipCode\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n  template: function CandidateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"label\", 0);\n      i0.ɵɵtext(2, \"National ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function CandidateComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.newCandidate.candidateNationalId = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 2);\n      i0.ɵɵtext(5, \"First Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function CandidateComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.newCandidate.firstName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Last Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function CandidateComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.newCandidate.lastName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Age:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function CandidateComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.newCandidate.age = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"label\", 8);\n      i0.ɵɵtext(14, \"Gender:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"select\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function CandidateComponent_Template_select_ngModelChange_15_listener($event) {\n        return ctx.newCandidate.gender = $event;\n      });\n      i0.ɵɵelementStart(16, \"option\", 10);\n      i0.ɵɵtext(17, \"Male\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"option\", 10);\n      i0.ɵɵtext(19, \"Female\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"option\", 10);\n      i0.ɵɵtext(21, \"Other\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"label\", 11);\n      i0.ɵɵtext(23, \"Party:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"select\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function CandidateComponent_Template_select_ngModelChange_24_listener($event) {\n        return ctx.newCandidate.party = $event;\n      });\n      i0.ɵɵelementStart(25, \"option\", 10);\n      i0.ɵɵtext(26, \"Democrat\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"option\", 10);\n      i0.ɵɵtext(28, \"Republican\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"option\", 10);\n      i0.ɵɵtext(30, \"Other\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"label\", 13);\n      i0.ɵɵtext(32, \"Street:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function CandidateComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.newCandidate.address.street = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"label\", 15);\n      i0.ɵɵtext(35, \"City:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"input\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function CandidateComponent_Template_input_ngModelChange_36_listener($event) {\n        return ctx.newCandidate.address.city = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"label\", 17);\n      i0.ɵɵtext(38, \"State:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"select\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function CandidateComponent_Template_select_ngModelChange_39_listener($event) {\n        return ctx.newCandidate.address.state = $event;\n      });\n      i0.ɵɵelementStart(40, \"option\", 10);\n      i0.ɵɵtext(41, \"Alabama\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"option\", 10);\n      i0.ɵɵtext(43, \"Alaska\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"label\", 19);\n      i0.ɵɵtext(45, \"Zip Code:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"input\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function CandidateComponent_Template_input_ngModelChange_46_listener($event) {\n        return ctx.newCandidate.address.zipCode = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function CandidateComponent_Template_button_click_47_listener() {\n        return ctx.registerCandidate();\n      });\n      i0.ɵɵtext(48, \"Register Candidate\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCandidate.candidateNationalId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCandidate.firstName);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCandidate.lastName);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCandidate.age);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCandidate.gender);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.Gender.Male);\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.Gender.Female);\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.Gender.Other);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCandidate.party);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.Party.Democrat);\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.Party.Republican);\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.Party.Other);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCandidate.address.street);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCandidate.address.city);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCandidate.address.state);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.State.Alabama);\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.State.Alaska);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCandidate.address.zipCode);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinValidator, i2.MaxValidator, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Gender","Party","State","CandidateComponent","constructor","candidateService","candidateNationalId","firstName","lastName","age","gender","Male","party","Republican","address","city","state","Alabama","street","zipCode","ngOnInit","getAllCandidates","subscribe","candidates","registerCandidate","newCandidate","candidate","console","log","deleteCandidate","nationalId","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/amirabaris/Documents/Beast-v2/client/src/app/components/candidate/candidate.component.ts","/Users/amirabaris/Documents/Beast-v2/client/src/app/components/candidate/candidate.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from 'src/app/services/candidate.service'; \nimport { PresidentCandidate } from 'src/models/PresidentCandidate';\nimport { Gender } from 'src/Enums/Gender';\nimport { Party } from 'src/Enums/Party';\nimport { State } from 'src/Enums/State';\n\n@Component({\n  selector: 'app-candidate',\n  templateUrl: './candidate.component.html',\n  styleUrls: ['./candidate.component.scss']\n})\nexport class CandidateComponent implements OnInit {\n  candidates: PresidentCandidate[] = [];\n  newCandidate: PresidentCandidate = {\n    candidateNationalId: '',\n    firstName: '',\n    lastName: '',\n    age: 0,\n    gender: Gender.Male,\n    party: Party.Republican,\n    address: {\n      city: '',\n      state: State.Alabama,\n      street: '',\n      zipCode: ''\n    }\n  };\nPresidentCandidate: any;\nGender: any;\nParty: any;\nState: any;\n\n  constructor(private candidateService: CandidateService) {}\n\n  ngOnInit(): void {\n    this.getAllCandidates();\n  }\n\n  getAllCandidates(): void {\n    this.candidateService.getAllCandidates().subscribe((candidates) => {\n      this.candidates = candidates;\n    });\n  }\n\n  registerCandidate(): void {\n    this.candidateService.registerCandidate(this.newCandidate).subscribe((candidate) => {\n      console.log('Candidate registered successfully', candidate);\n      this.getAllCandidates();\n      this.newCandidate = {\n        candidateNationalId: this.newCandidate.candidateNationalId,\n        firstName: this.newCandidate.firstName,\n        lastName: this.newCandidate.lastName,\n        age: this.newCandidate.age,\n        gender: this.newCandidate.gender,\n        party: this.newCandidate.party,\n        address: {\n          city: this.newCandidate.address.city,\n          state: this.newCandidate.address.state,\n          street: this.newCandidate.address.street,\n          zipCode: this.newCandidate.address.zipCode\n        }\n      };\n    });\n  }\n\n  deleteCandidate(nationalId: string): void {\n    this.candidateService.deleteCandidate(nationalId).subscribe(() => {\n      console.log('Candidate deleted successfully');\n      this.getAllCandidates();\n    });\n  }\n}","<form>\n  <label for=\"nationalId\">National ID:</label>\n  <input type=\"text\" [(ngModel)]=\"newCandidate.candidateNationalId\" name=\"nationalId\" required>\n\n  <label for=\"firstName\">First Name:</label>\n  <input type=\"text\" [(ngModel)]=\"newCandidate.firstName\" name=\"firstName\" required>\n\n  <label for=\"lastName\">Last Name:</label>\n  <input type=\"text\" [(ngModel)]=\"newCandidate.lastName\" name=\"lastName\" required>\n\n  <label for=\"age\">Age:</label>\n  <input type=\"number\" [(ngModel)]=\"newCandidate.age\" name=\"age\" min=\"18\" max=\"100\" required>\n\n  <label for=\"gender\">Gender:</label>\n  <select [(ngModel)]=\"newCandidate.gender\" name=\"gender\" required>\n    <option value=\"{{Gender.Male}}\">Male</option>\n    <option value=\"{{Gender.Female}}\">Female</option>\n    <option value=\"{{Gender.Other}}\">Other</option>\n  </select>\n\n  <label for=\"party\">Party:</label>\n  <select [(ngModel)]=\"newCandidate.party\" name=\"party\" required>\n    <option value=\"{{Party.Democrat}}\">Democrat</option>\n    <option value=\"{{Party.Republican}}\">Republican</option>\n    <option value=\"{{Party.Other}}\">Other</option>\n  </select>\n\n  <label for=\"street\">Street:</label>\n  <input type=\"text\" [(ngModel)]=\"newCandidate.address.street\" name=\"street\" required>\n\n  <label for=\"city\">City:</label>\n  <input type=\"text\" [(ngModel)]=\"newCandidate.address.city\" name=\"city\" required>\n\n  <label for=\"state\">State:</label>\n  <select [(ngModel)]=\"newCandidate.address.state\" name=\"state\" required>\n    <option value=\"{{State.Alabama}}\">Alabama</option>\n    <option value=\"{{State.Alaska}}\">Alaska</option>\n    <!-- Add more states here -->\n  </select>\n\n  <label for=\"zipCode\">Zip Code:</label>\n  <input type=\"text\" [(ngModel)]=\"newCandidate.address.zipCode\" name=\"zipCode\" required>\n\n  <button (click)=\"registerCandidate()\">Register Candidate</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}